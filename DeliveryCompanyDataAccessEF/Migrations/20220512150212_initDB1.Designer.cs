// <auto-generated />
using System;
using DeliveryCompany.DataAccessEF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeliveryCompanyDataAccessEF.Migrations
{
    [DbContext(typeof(MyAppContext))]
    [Migration("20220512150212_initDB1")]
    partial class initDB1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DeliveryCompanyData.Entities.Application", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Номер заявки");

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Адрес доставки");

                    b.Property<string>("DeliveryTown")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Город доставки");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasComment("Ссылка на id-отделение");

                    b.Property<int>("Height")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("Высота груза (см)");

                    b.Property<int>("Length")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("Длина груза (см)");

                    b.Property<string>("Message")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("OK")
                        .HasComment("Комментарий к заказу");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasComment("Контактный номер телефона");

                    b.Property<string>("ReceivingAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Адрес, где забрать");

                    b.Property<string>("ReceivingTown")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Город, где забрать");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValue("Новая")
                        .HasComment("Статус заявки, возможные значения: 'Новая', 'Передано на выполнение', 'Выполнена', 'Отменена'");

                    b.Property<double>("Volume")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasComment("Объем груза, по формуле Length * Width * Height (м^3)");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("Вес груза (кг)");

                    b.Property<int>("Width")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("Ширина груза (см)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("DeliveryCompanyData.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Идентификатор отделения")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Наименование отделения");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("DeliveryCompanyData.Entities.Application", b =>
                {
                    b.HasOne("DeliveryCompanyData.Entities.Department", null)
                        .WithMany("ApplicationList")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeliveryCompanyData.Entities.Department", b =>
                {
                    b.Navigation("ApplicationList");
                });
#pragma warning restore 612, 618
        }
    }
}
